goals:
  ecommerce:
    name: eCommerce frontend
    roles:
      - weblb
      - webapp
      - msgbroker
      - database_master
      - database_slave
      - workerapp

roles:
  weblb:
    name: Web application load balancer
    min: 2
    exports:
      http: { type: single_port, protocol: tcp }
      https: { type: single_port, protocol: tcp }
    imports:
      webapp:
        - http
        - https

  webapp:
    name: Web application
    min: 3
    exports:
      http: { type: single_port, protocol: tcp }
      https: { type: single_port, protocol: tcp }
    imports:
      database_master: querying
      database_slave: querying
      msgbroker: amqp

  msgbroker:
    name: RabbitMQ message broker
    min: 3
    exports:
      amqp: { type: single_port, protocol: tcp }

  database_master:
    name: MySQL master database
    exports:
      querying: { type: single_port, protocol: tcp }

  database_slave:
    name: MySQL slave database
    min: 2
    imports:
      database_master: querying
    exports:
      querying: { type: single_port, protocol: tcp }

  workerapp:
    name: Background worker application
    min: 2
    imports:
      database_master: querying
      database_slave: querying
      msgbroker: amqp

clusters:
  # n-to-m cluster
  web:
    name: Web application cluster
    strategy: varnish
    roles:
      weblb: lb
      webapp: target

  # n homogeneous cluster -- self-contained
  msgbroker:
    name: RabbitMQ cluster
    strategy: rabbitmq
    roles:
      msgbroker: ~

  # 1-to-n master-slave cluster -- self-contained
  database:
    name: MySQL replication cluster
    strategy: mysql_replication
    roles:
      database_master: master
      database_slave: slave
