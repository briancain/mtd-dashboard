goals:
  ecommerce:
    name: eCommerce frontend
    roles:
      - weblb
      - webapp
      - database_master
      - database_slave
      - workerapp
      - kvstore

roles:
  weblb:
    name: Web application load balancer
    min: 2
    exports:
      http: { type: single_port, protocol: tcp }
      https: { type: single_port, protocol: tcp }
    imports:
      webapp:
        - http
        - https

  webapp:
    name: Web application
    min: 3
    exports:
      http: { type: single_port, protocol: tcp }
      https: { type: single_port, protocol: tcp }
    imports:
      database_master: querying
      database_slave: querying
      kvstore: redis

  database_master:
    name: MySQL master database
    exports:
      querying: { type: single_port, protocol: tcp }

  database_slave:
    name: MySQL slave database
    min: 2
    imports:
      database_master: querying
    exports:
      querying: { type: single_port, protocol: tcp }

  worker:
    name: Sidekiq worker application
    count: 3
    imports:
      database_master: querying
      database_slave: querying
      kvstore: redis

  kvstore:
    name: Redis server
    count: 1
    exports:
      redis: { type: single_port, protocol: tcp }

clusters:
  # n-to-m cluster
  web:
    name: Web application cluster
    strategy: varnish
    roles:
      weblb: lb
      webapp: target

  # n independent cluster -- shared-nothing
  worker:
    name: Sidekiq worker cluster
    strategy: generic
    roles:
      workerapp: ~

  # 1-to-n master-slave cluster -- self-contained
  database:
    name: MySQL replication cluster
    strategy: mysql_replication
    roles:
      database_master: master
      database_slave: slave
